{
  "name": "app_django",
  "description": "Installs the Django application server.",
  "long_description": "= RightScale App Django Cookbook\n\n== DESCRIPTION:\n\n* Cookbook provides Apache + Django implementation of the 'app' LWRP.\n* Installs and configures, Apache + Django application servers.\n\n== REQUIREMENTS:\n\n* Requires \"app\" Lightweight resource cookbook https://github.com/rightscale/rightscale_cookbooks/tree/master/cookbooks/app\n  or your own implementation of the \"app\" resource. See \"app\" cookbook README for details.\n* Requires a VM launched from a RightScale managed RightImage\n* Tested on CentOS 6.2 RightImage\n* Tested on Ubuntu 12.04 RightImage\n\n== COOKBOOKS DEPENDENCIES:\n\nPlease see <tt>metadata.rb</tt> file for the latest dependencies.\n\n* <tt>rightscale</tt>\n* <tt>web_apache</tt>\n* <tt>repo</tt>\n* <tt>logrotate</tt>\n* <tt>app</tt>\n* <tt>db</tt>\n* <tt>python</tt>\n\n== KNOWN LIMITATIONS:\n\nThere are no known limitations.\n\n== SETUP/USAGE:\n\n* Place <tt>app_django::setup_server_1_4</tt> recipe into your runlist to set\n  up the application server specific attributes. This sets up the app provider\n  and version.\n* Place <tt>app::install_server</tt> recipe after setup_server recipe to install\n  the application server.\n\n== DETAILS:\n\n=== General:\n\nThe <tt>app_django</tt> cookbook will install and set up an Apache + Django\napplication server configured to connect with a MySQL or Postgres database server.\nSet db/provider_type input in RightScale ServerTemplate to choose database\nprovider. Place <tt>db::default</tt> recipe before application server installation\nto install the database client.\n\n<b>Apache</b>\n\nServer version: Apache/2.2.15\n\nServer built: Feb 13 2012 22:31:42\n\n<b>Django</b>\n\nDjango version 1.4\n\nPython version 2.6.6 (2012-06-18) (x86_64-linux), Pip version 1.1\n\nalso:\n* <tt>Custom python command input</tt>\n* <tt>Bundler support</tt>\n* <tt>Input for user defined python module installation</tt>\n* <tt>Application code installation from remote git, svn or Remote Object Store (ROS) location</tt>\n* <tt>MySQL or Postgres database connection file configuration</tt>\n* <tt>Automatic application vhost file configuration</tt>\n* <tt>Automatic logrotate file configuration for Apache logs</tt>\n\nFor more info see: {Release Notes}[http://support.rightscale.com/18-Release_Notes/ServerTemplates_and_RightImages/current] (Section 'Django App Server' under ServerTemplates)\n\nPlease checkout the tutorial: {Django App Server}[http://support.rightscale.com/03-Tutorials/Django_App_Server_Beta]\n\nServerTemplate built on this cookbook can be combined in two modes:\n\n1 - For apps with bundler support, keep the \"requirements.txt\" file under application ROOT directory, and\n\"run_custom_python_commands\" for migration commands\n\n2 - For apps without bundler support, provide package(s) name as user input while server launch, and\n\"run_custom_python_commands\" for migration commands\n\nNote: In operational mode to install additional python packages for Django app server, provide package(s) name as user input\nand re-run the <tt>app::default</tt> boot recipe.\n\nMix these recipes in any way to satisfy project requirements.\n\n=== Attributes:\n\nThese are settings used in recipes and templates. Default values are noted.\n\nNote: Only \"internal\" cookbook attributes are described here. Descriptions of attributes which have inputs you can find in metadata.rb cookbook file.\n\n====== General attributes\n\n* <tt>node[:app_django][:module_dependencies]</tt> - Modules required for Apache.\n* <tt>node[:app_django][:app][:debug_mode]</tt> - Django application debug mode.\n* <tt>node[:app_django][:apache][:serve_local_files]</tt> - Used to enable/disable the serve of any existing local files.\n* <tt>node[:app_django][:deploy_dir]</tt> - Path in the specified repository where application code will be pulled from.\n* <tt>node[:app_django][:pip_bin]</tt> - Path to Python pip bin directory.\n* <tt>node[:app_django][:python_bin]</tt> - Path to Python bin directory.\n* <tt>node[:app_django][:project][:opt_pip_list]</tt> - A list of additional python packages, required for django application\n* <tt>node[:app_django][:project][:custom_cmd]</tt> - A list of python commands required for django application initialization.\n\n=== Templates:\n\n* <tt>apache_mod_wsgi_vhost.erb</tt> - Configuration for apache vhost file used in the <tt>app::setup_vhost</tt> recipe\n  and defined in <tt>:setup_vhost</tt> action of the <tt>app_django</tt> LWRP.\n* <tt>wsgi.py.erb</tt> - Configuration for Apache-Django WSGI config file used in the <tt>app::setup_vhost</tt> recipe\n  and defined in <tt>:setup_vhost</tt> action of the <tt>app_django</tt> LWRP.\n* <tt>settings.py.erb</tt> - Rename django \"settings.py\" file under app root to \"settings_default.py\", configure new \"settings.py\" file\n  for project database connection used in the <tt>app::setup_db_connection</tt> recipe\n  and defined in <tt>:setup_db_connection</tt> action of the <tt>app_django</tt> LWRP.\n\n=== LWRPs:\n\n<tt>app_django</tt> Lightweight provider is defined in the providers/default.rb file, it contains source for the following actions:\n\n* <tt>:install</tt>\n* <tt>:setup_vhost</tt>\n* <tt>:start</tt>\n* <tt>:stop</tt>\n* <tt>:restart</tt>\n* <tt>:reload</tt>\n* <tt>:code_update</tt>\n* <tt>:setup_db_connection</tt>\n\nFor more info about these actions, please see the <tt>app</tt> cookbook README.\n\nFor normal operations it requires \"app\" resource which will act as the interface to all <tt>app_django</tt> provider logic.\n\n===== Actions\n\n* <tt>:install</tt> - Install packages required for application server setup.\n* <tt>:setup_vhost</tt> - Set up apache vhost file with wsgi module directives included.\n* <tt>:start</tt> - Start sequence for Django application server.\n* <tt>:stop</tt> - Stop sequence for Django application server.\n* <tt>:reload</tt> - Reload sequence for Django application server.\n* <tt>:restart</tt> - Restart sequence for Django application server.\n* <tt>:code_update</tt> - Perform project source code update/download using user selected \"repo\" LWRP. Set up logrotate configuration.\n* <tt>:setup_db_connection</tt> - Perform project settings.py database connection configuration.\n  The driver type is specified as 'python' and the db_<provider> cookbook's\n  <tt>install_client_driver</tt> action performs necessary steps to install the\n  database adapter.\n\n===== Usage Example:\n\nFor usage examples please see corresponding section in <tt>app</tt> cookbook README.\n\n== LICENSE:\n\nCopyright RightScale, Inc. All rights reserved.  All access and use subject to the\nRightScale Terms of Service available at http://www.rightscale.com/terms.php and,\nif applicable, other agreements such as a RightScale Master Subscription Agreement.\n",
  "maintainer": "RightScale, Inc.",
  "maintainer_email": "support@rightscale.com",
  "license": "Copyright RightScale, Inc. All rights reserved.",
  "platforms": {
  },
  "dependencies": {
    "app": ">= 0.0.0",
    "web_apache": ">= 0.0.0",
    "db_mysql": ">= 0.0.0",
    "db_postgres": ">= 0.0.0",
    "repo": ">= 0.0.0",
    "rightscale": ">= 0.0.0",
    "python": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
    "app_django/app/debug_mode": {
      "display_name": "Django App Debug Mode",
      "description": "Creates a Django application debug environment variable, e.g. should be true for dev and false for prod environment. Example: false",
      "choice": [
        "true",
        "false"
      ],
      "required": "optional",
      "default": "false",
      "recipes": [
        "app_django::setup_server_1_4"
      ],
      "calculated": false,
      "type": "string"
    },
    "app_django/apache/serve_local_files": {
      "display_name": "Apache serve local Files",
      "description": "This option tells Apache whether it should serve the (static) content itself. Currently, it will omit dynamic content, such as *.php, *.action, *.jsp, and *.do. Example: true",
      "choice": [
        "true",
        "false"
      ],
      "required": "optional",
      "default": "true",
      "recipes": [
        "app_django::setup_server_1_4"
      ],
      "calculated": false,
      "type": "string"
    },
    "app_django/project/opt_pip_list": {
      "display_name": "Custom Python Package list",
      "description": "A space-separated list of optional python package(s), along with their versions in the Format: py-pkg1==version py-pkg2==version py-pkg3==version. Example: simplejson==1.7.1, Markdown==2.0.3",
      "required": "optional",
      "default": "",
      "recipes": [
        "app_django::setup_server_1_4"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    },
    "app_django/project/custom_cmd": {
      "display_name": "Custom Django command",
      "description": "A comma-separated list of optional commands which will be executed in the app directory. Example: manage.py syncdb, manage.py migrate, manage.py loaddata ./fixtures/example_initial_data.json",
      "required": "optional",
      "default": "",
      "recipes": [
        "app_django::run_custom_django_commands"
      ],
      "choice": [

      ],
      "calculated": false,
      "type": "string"
    }
  },
  "groupings": {
  },
  "recipes": {
    "app_django::setup_server_1_4": "Installs the Django application server.",
    "app_django::run_custom_django_commands": "Runs specific user defined commands. Commands will be executed in the app directory."
  },
  "version": "13.3.0"
}